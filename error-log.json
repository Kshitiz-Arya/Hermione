[
    {
        "<class 'discord.ext.commands.errors.MissingRequiredArgument'>": {
            "stats": [
                "('chapter is a required argument that is missing.',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 855, in invoke\n    await self.prepare(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 789, in prepare\n    await self._parse_arguments(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 697, in _parse_arguments\n    transformed = await self.transform(ctx, param)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 542, in transform\n    raise MissingRequiredArgument(param)\n",
                    "discord.ext.commands.errors.MissingRequiredArgument: chapter is a required argument that is missing.\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.MissingRequiredArgument'>": {
            "editors": [
                "('chapter is a required argument that is missing.',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 855, in invoke\n    await self.prepare(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 789, in prepare\n    await self._parse_arguments(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 697, in _parse_arguments\n    transformed = await self.transform(ctx, param)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 542, in transform\n    raise MissingRequiredArgument(param)\n",
                    "discord.ext.commands.errors.MissingRequiredArgument: chapter is a required argument that is missing.\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CheckFailure'>": {
            "editors": [
                "('The check functions for command editors failed.',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 855, in invoke\n    await self.prepare(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 778, in prepare\n    raise CheckFailure('The check functions for command {0.qualified_name} failed.'.format(self))\n",
                    "discord.ext.commands.errors.CheckFailure: The check functions for command editors failed.\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CheckFailure'>": {
            "edit": [
                "('The check functions for command edit failed.',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 855, in invoke\n    await self.prepare(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 778, in prepare\n    raise CheckFailure('The check functions for command {0.qualified_name} failed.'.format(self))\n",
                    "discord.ext.commands.errors.CheckFailure: The check functions for command edit failed.\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CheckFailure'>": {
            "edit": [
                "('The check functions for command edit failed.',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 855, in invoke\n    await self.prepare(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 778, in prepare\n    raise CheckFailure('The check functions for command {0.qualified_name} failed.'.format(self))\n",
                    "discord.ext.commands.errors.CheckFailure: The check functions for command edit failed.\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CheckFailure'>": {
            "edit": [
                "('The check functions for command edit failed.',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 855, in invoke\n    await self.prepare(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 778, in prepare\n    raise CheckFailure('The check functions for command {0.qualified_name} failed.'.format(self))\n",
                    "discord.ext.commands.errors.CheckFailure: The check functions for command edit failed.\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.MissingRequiredArgument'>": {
            "editors": [
                "('chapter is a required argument that is missing.',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 855, in invoke\n    await self.prepare(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 789, in prepare\n    await self._parse_arguments(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 697, in _parse_arguments\n    transformed = await self.transform(ctx, param)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 542, in transform\n    raise MissingRequiredArgument(param)\n",
                    "discord.ext.commands.errors.MissingRequiredArgument: chapter is a required argument that is missing.\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "edit": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\\nIn embed.fields.2.value: This field is required',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/commands/basic.py\", line 447, in edit\n    msg_send = await Editorial_Channel.send(embed=embed)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/abc.py\", line 1064, in send\n    data = await state.http.send_message(channel.id, content, tts=tts, embed=embed,\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn embed.fields.2.value: This field is required\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn embed.fields.2.value: This field is required\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.MissingRequiredArgument'>": {
            "suggest": [
                "('suggestion is a required argument that is missing.',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 855, in invoke\n    await self.prepare(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 789, in prepare\n    await self._parse_arguments(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 706, in _parse_arguments\n    kwargs[name] = await self.transform(ctx, param)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 542, in transform\n    raise MissingRequiredArgument(param)\n",
                    "discord.ext.commands.errors.MissingRequiredArgument: suggestion is a required argument that is missing.\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.MissingRequiredArgument'>": {
            "edit": [
                "('edit is a required argument that is missing.',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 855, in invoke\n    await self.prepare(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 789, in prepare\n    await self._parse_arguments(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 706, in _parse_arguments\n    kwargs[name] = await self.transform(ctx, param)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 542, in transform\n    raise MissingRequiredArgument(param)\n",
                    "discord.ext.commands.errors.MissingRequiredArgument: edit is a required argument that is missing.\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "edit": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/commands/basic.py\", line 456, in edit\n    await msg_send.add_reaction(emoji)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/message.py\", line 1220, in add_reaction\n    await self._state.http.add_reaction(self.channel.id, self.id, emoji)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "edit": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/commands/basic.py\", line 456, in edit\n    await msg_send.add_reaction(emoji)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/message.py\", line 1220, in add_reaction\n    await self._state.http.add_reaction(self.channel.id, self.id, emoji)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CheckFailure'>": {
            "editors": [
                "('The check functions for command editors failed.',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 855, in invoke\n    await self.prepare(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 778, in prepare\n    raise CheckFailure('The check functions for command {0.qualified_name} failed.'.format(self))\n",
                    "discord.ext.commands.errors.CheckFailure: The check functions for command editors failed.\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CheckFailure'>": {
            "editors": [
                "('The check functions for command editors failed.',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 855, in invoke\n    await self.prepare(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 778, in prepare\n    raise CheckFailure('The check functions for command {0.qualified_name} failed.'.format(self))\n",
                    "discord.ext.commands.errors.CheckFailure: The check functions for command editors failed.\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "addAuthor": [
                "('Command raised an exception: IndexError: list index out of range',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 281, in addAuthor\n    author = ctx.message.mentions[0]\n",
                    "IndexError: list index out of range\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: IndexError: list index out of range\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "checkEdits": [
                "('Command raised an exception: ValueError: not enough values to unpack (expected 2, got 1)',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 401, in checkEdits\n    chapter, edits = msg[6:].split(maxsplit=1)\n",
                    "ValueError: not enough values to unpack (expected 2, got 1)\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: ValueError: not enough values to unpack (expected 2, got 1)\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "checkEdits": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\\nIn embed.fields.2.value: This field is required',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 409, in checkEdits\n    await ctx.invoke(self.client.get_command('edit'), chapter=chapter, edit=edits, context=context)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/context.py\", line 144, in invoke\n    ret = await command.callback(*arguments, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/commands/basic.py\", line 447, in edit\n    msg_send = await Editorial_Channel.send(embed=embed)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/abc.py\", line 1064, in send\n    data = await state.http.send_message(channel.id, content, tts=tts, embed=embed,\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn embed.fields.2.value: This field is required\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn embed.fields.2.value: This field is required\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "checkEdits": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\\nIn embed.fields.1.value: This field is required',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 409, in checkEdits\n    result = await ctx.invoke(self.client.get_command('edit'), chapter=chapter, edit=edits, context=context)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/context.py\", line 144, in invoke\n    ret = await command.callback(*arguments, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/commands/basic.py\", line 449, in edit\n    msg_send = await Editorial_Channel.send(embed=embed)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/abc.py\", line 1064, in send\n    data = await state.http.send_message(channel.id, content, tts=tts, embed=embed,\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn embed.fields.1.value: This field is required\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn embed.fields.1.value: This field is required\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "edit": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\\nIn embed.fields.1.value: This field is required',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/commands/basic.py\", line 449, in edit\n    msg_send = await Editorial_Channel.send(embed=embed)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/abc.py\", line 1064, in send\n    data = await state.http.send_message(channel.id, content, tts=tts, embed=embed,\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn embed.fields.1.value: This field is required\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn embed.fields.1.value: This field is required\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "edit": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\\nIn embed.fields.1.value: This field is required',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/commands/basic.py\", line 449, in edit\n    msg_send = await Editorial_Channel.send(embed=embed)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/abc.py\", line 1064, in send\n    data = await state.http.send_message(channel.id, content, tts=tts, embed=embed,\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn embed.fields.1.value: This field is required\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn embed.fields.1.value: This field is required\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "edit": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\\nIn embed.fields.1.value: This field is required',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/commands/basic.py\", line 449, in edit\n    msg_send = await Editorial_Channel.send(embed=embed)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/abc.py\", line 1064, in send\n    data = await state.http.send_message(channel.id, content, tts=tts, embed=embed,\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn embed.fields.1.value: This field is required\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn embed.fields.1.value: This field is required\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandNotFound'>": {
            "None": [
                "('Command \"help2\" is not found',)",
                [
                    "discord.ext.commands.errors.CommandNotFound: Command \"help2\" is not found\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandNotFound'>": {
            "None": [
                "('Command \"help2\" is not found',)",
                [
                    "discord.ext.commands.errors.CommandNotFound: Command \"help2\" is not found\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "reload": [
                "(\"Command raised an exception: ExtensionNotLoaded: Extension 'cogs.commands.help' has not been loaded.\",)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/main.py\", line 56, in reload\n    client.unload_extension(f'cogs.{dir}.{extension}')\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 716, in unload_extension\n    raise errors.ExtensionNotLoaded(name)\n",
                    "discord.ext.commands.errors.ExtensionNotLoaded: Extension 'cogs.commands.help' has not been loaded.\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: ExtensionNotLoaded: Extension 'cogs.commands.help' has not been loaded.\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandNotFound'>": {
            "None": [
                "('Command \"help\" is not found',)",
                [
                    "discord.ext.commands.errors.CommandNotFound: Command \"help\" is not found\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandNotFound'>": {
            "None": [
                "('Command \"help2\" is not found',)",
                [
                    "discord.ext.commands.errors.CommandNotFound: Command \"help2\" is not found\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandNotFound'>": {
            "None": [
                "('Command \"help\" is not found',)",
                [
                    "discord.ext.commands.errors.CommandNotFound: Command \"help\" is not found\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandNotFound'>": {
            "None": [
                "('Command \"help\" is not found',)",
                [
                    "discord.ext.commands.errors.CommandNotFound: Command \"help\" is not found\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandNotFound'>": {
            "None": [
                "('Command \"help\" is not found',)",
                [
                    "discord.ext.commands.errors.CommandNotFound: Command \"help\" is not found\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandNotFound'>": {
            "None": [
                "('Command \"help\" is not found',)",
                [
                    "discord.ext.commands.errors.CommandNotFound: Command \"help\" is not found\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandNotFound'>": {
            "None": [
                "('Command \"mods\" is not found',)",
                [
                    "discord.ext.commands.errors.CommandNotFound: Command \"mods\" is not found\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.BadArgument'>": {
            "edit": [
                "('Converting to \"int\" failed for parameter \"chapter\".',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 467, in _actual_conversion\n    return converter(argument)\n",
                    "ValueError: invalid literal for int() with base 10: 'a'\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 855, in invoke\n    await self.prepare(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 789, in prepare\n    await self._parse_arguments(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 697, in _parse_arguments\n    transformed = await self.transform(ctx, param)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 552, in transform\n    return await self.do_conversion(ctx, converter, argument, param)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 505, in do_conversion\n    return await self._actual_conversion(ctx, converter, argument, param)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 476, in _actual_conversion\n    raise BadArgument('Converting to \"{}\" failed for parameter \"{}\".'.format(name, param.name)) from exc\n",
                    "discord.ext.commands.errors.BadArgument: Converting to \"int\" failed for parameter \"chapter\".\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandNotFound'>": {
            "None": [
                "('Command \"mod\" is not found',)",
                [
                    "discord.ext.commands.errors.CommandNotFound: Command \"mod\" is not found\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.MissingRequiredArgument'>": {
            "editors": [
                "('chapter is a required argument that is missing.',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 855, in invoke\n    await self.prepare(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 789, in prepare\n    await self._parse_arguments(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 697, in _parse_arguments\n    transformed = await self.transform(ctx, param)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 542, in transform\n    raise MissingRequiredArgument(param)\n",
                    "discord.ext.commands.errors.MissingRequiredArgument: chapter is a required argument that is missing.\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "help": [
                "(\"Command raised an exception: NameError: name 'message' is not defined\",)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/commands/help.py\", line 54, in help\n    prefix = get_prefix(ctx.guild) # ENTER YOUR PREFIX - loaded from config, as string or how ever you want!\n",
                    "  File \"/home/ishu/GitHub/Hermione/packages/command.py\", line 54, in get_prefix\n    guild = message.guild\n",
                    "NameError: name 'message' is not defined\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: NameError: name 'message' is not defined\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "help": [
                "(\"Command raised an exception: NameError: name 'json' is not defined\",)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/commands/help.py\", line 54, in help\n    prefix = get_prefix(ctx.guild) # ENTER YOUR PREFIX - loaded from config, as string or how ever you want!\n",
                    "  File \"/home/ishu/GitHub/Hermione/packages/command.py\", line 55, in get_prefix\n    return read('config', guild)['prefix']\n",
                    "  File \"/home/ishu/GitHub/Hermione/packages/command.py\", line 46, in read\n    return json.load(f)\n",
                    "NameError: name 'json' is not defined\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: NameError: name 'json' is not defined\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandNotFound'>": {
            "None": [
                "('Command \"mods\" is not found',)",
                [
                    "discord.ext.commands.errors.CommandNotFound: Command \"mods\" is not found\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "isEmoji": [
                "(\"Command raised an exception: NameError: name 'emojis' is not defined\",)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 477, in isEmoji\n    print(type(emojis))\n",
                    "NameError: name 'emojis' is not defined\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: NameError: name 'emojis' is not defined\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "isEmoji": [
                "('Command raised an exception: TypeError: __init__() takes 1 positional argument but 2 were given',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 478, in isEmoji\n    discord.Emoji(emoji)\n",
                    "TypeError: __init__() takes 1 positional argument but 2 were given\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: TypeError: __init__() takes 1 positional argument but 2 were given\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "isEmoji": [
                "(\"Command raised an exception: AttributeError: 'ClientUser' object has no attribute 'emojis'\",)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 477, in isEmoji\n    emojis = self.client.user.emojis\n",
                    "AttributeError: 'ClientUser' object has no attribute 'emojis'\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: AttributeError: 'ClientUser' object has no attribute 'emojis'\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandNotFound'>": {
            "None": [
                "('Command \"isEmojis\" is not found',)",
                [
                    "discord.ext.commands.errors.CommandNotFound: Command \"isEmojis\" is not found\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "reload": [
                "(\"Command raised an exception: ExtensionFailed: Extension 'cogs.mods.mods' raised an error: ModuleNotFoundError: No module named 'emojis'\",)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 606, in _load_from_module_spec\n    spec.loader.exec_module(lib)\n",
                    "  File \"<frozen importlib._bootstrap_external>\", line 790, in exec_module\n",
                    "  File \"<frozen importlib._bootstrap>\", line 228, in _call_with_frames_removed\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 12, in <module>\n    from emojis import UNICODE_EMOJI as unicode_emojis\n",
                    "ModuleNotFoundError: No module named 'emojis'\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/main.py\", line 66, in reload\n    client.load_extension(f'cogs.{dir}.{extension}')\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 678, in load_extension\n    self._load_from_module_spec(spec, name)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 609, in _load_from_module_spec\n    raise errors.ExtensionFailed(key, e) from e\n",
                    "discord.ext.commands.errors.ExtensionFailed: Extension 'cogs.mods.mods' raised an error: ModuleNotFoundError: No module named 'emojis'\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: ExtensionFailed: Extension 'cogs.mods.mods' raised an error: ModuleNotFoundError: No module named 'emojis'\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "isEmoji": [
                "(\"Command raised an exception: NameError: name 'lookup' is not defined\",)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 504, in isEmoji\n    ctx.send(f'{lookup}, {eid}')\n",
                    "NameError: name 'lookup' is not defined\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: NameError: name 'lookup' is not defined\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandNotFound'>": {
            "None": [
                "('Command \"isEmojis\" is not found',)",
                [
                    "discord.ext.commands.errors.CommandNotFound: Command \"isEmojis\" is not found\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "isEmoji": [
                "(\"Command raised an exception: NameError: name 're' is not defined\",)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 504, in isEmoji\n    lookup, eid = get_emote(emoji)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 489, in get_emote\n    server_match = re.search(r'<a?:(\\w+):(\\d+)>', emoji)\n",
                    "NameError: name 're' is not defined\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: NameError: name 're' is not defined\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "reload": [
                "(\"Command raised an exception: ExtensionFailed: Extension 'cogs.mods.mods' raised an error: NameError: name 'Union' is not defined\",)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 606, in _load_from_module_spec\n    spec.loader.exec_module(lib)\n",
                    "  File \"<frozen importlib._bootstrap_external>\", line 790, in exec_module\n",
                    "  File \"<frozen importlib._bootstrap>\", line 228, in _call_with_frames_removed\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 49, in <module>\n    class Mods(commands.Cog):\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 511, in Mods\n    async def convert(self, ctx: commands.Context, argument: str) -> Union[discord.Emoji, str]:\n",
                    "NameError: name 'Union' is not defined\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/main.py\", line 66, in reload\n    client.load_extension(f'cogs.{dir}.{extension}')\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 678, in load_extension\n    self._load_from_module_spec(spec, name)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 609, in _load_from_module_spec\n    raise errors.ExtensionFailed(key, e) from e\n",
                    "discord.ext.commands.errors.ExtensionFailed: Extension 'cogs.mods.mods' raised an error: NameError: name 'Union' is not defined\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: ExtensionFailed: Extension 'cogs.mods.mods' raised an error: NameError: name 'Union' is not defined\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "reload": [
                "(\"Command raised an exception: ExtensionNotLoaded: Extension 'cogs.mods.mods' has not been loaded.\",)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/main.py\", line 65, in reload\n    client.unload_extension(f'cogs.{dir}.{extension}')\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 716, in unload_extension\n    raise errors.ExtensionNotLoaded(name)\n",
                    "discord.ext.commands.errors.ExtensionNotLoaded: Extension 'cogs.mods.mods' has not been loaded.\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: ExtensionNotLoaded: Extension 'cogs.mods.mods' has not been loaded.\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "convert": [
                "(\"Command raised an exception: AttributeError: 'Mods' object has no attribute '_get_id_match'\",)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 512, in convert\n    match = self._get_id_match(argument) or re.match(\n",
                    "AttributeError: 'Mods' object has no attribute '_get_id_match'\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: AttributeError: 'Mods' object has no attribute '_get_id_match'\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "isEmoji": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\\nIn content: Must be 2000 or fewer in length.',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 481, in isEmoji\n    await ctx.send(str(unicode_emojis['en'].keys()))\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/abc.py\", line 1064, in send\n    data = await state.http.send_message(channel.id, content, tts=tts, embed=embed,\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn content: Must be 2000 or fewer in length.\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn content: Must be 2000 or fewer in length.\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "isEmoji": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\\nIn content: Must be 2000 or fewer in length.',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 481, in isEmoji\n    await ctx.send(str(emojis[:50]))\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/abc.py\", line 1064, in send\n    data = await state.http.send_message(channel.id, content, tts=tts, embed=embed,\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn content: Must be 2000 or fewer in length.\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn content: Must be 2000 or fewer in length.\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandNotFound'>": {
            "None": [
                "('Command \"isEmojis\" is not found',)",
                [
                    "discord.ext.commands.errors.CommandNotFound: Command \"isEmojis\" is not found\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "isEmoji": [
                "('Command raised an exception: IndexError: list index out of range',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 481, in isEmoji\n    await ctx.send(str(emojis[1]))\n",
                    "IndexError: list index out of range\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: IndexError: list index out of range\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandNotFound'>": {
            "None": [
                "('Command \"isEmojis\" is not found',)",
                [
                    "discord.ext.commands.errors.CommandNotFound: Command \"isEmojis\" is not found\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "isEmoji": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 480, in isEmoji\n    await ctx.message.add_reaction(emoji)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/message.py\", line 1220, in add_reaction\n    await self._state.http.add_reaction(self.channel.id, self.id, emoji)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "isEmoji": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\\nIn content: Must be 2000 or fewer in length.',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 481, in isEmoji\n    await ctx.send(str(emojis[0:1000]))\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/abc.py\", line 1064, in send\n    data = await state.http.send_message(channel.id, content, tts=tts, embed=embed,\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn content: Must be 2000 or fewer in length.\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn content: Must be 2000 or fewer in length.\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "isEmoji": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\\nIn content: Must be 2000 or fewer in length.',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 481, in isEmoji\n    await ctx.send(str(emojis[0:500]))\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/abc.py\", line 1064, in send\n    data = await state.http.send_message(channel.id, content, tts=tts, embed=embed,\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn content: Must be 2000 or fewer in length.\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn content: Must be 2000 or fewer in length.\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "setEmojis": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 336, in setEmojis\n    await ctx.message.add_reaction(e)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/message.py\", line 1220, in add_reaction\n    await self._state.http.add_reaction(self.channel.id, self.id, emoji)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "edit": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\\nIn embed.fields.1.value: This field is required',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/commands/basic.py\", line 451, in edit\n    msg_send = await Editorial_Channel.send(embed=embed)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/abc.py\", line 1064, in send\n    data = await state.http.send_message(channel.id, content, tts=tts, embed=embed,\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn embed.fields.1.value: This field is required\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 50035): Invalid Form Body\nIn embed.fields.1.value: This field is required\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "setEmojis": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 336, in setEmojis\n    await ctx.message.add_reaction(e)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/message.py\", line 1220, in add_reaction\n    await self._state.http.add_reaction(self.channel.id, self.id, emoji)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "setEmojis": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 336, in setEmojis\n    await ctx.message.add_reaction(e)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/message.py\", line 1220, in add_reaction\n    await self._state.http.add_reaction(self.channel.id, self.id, emoji)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "setEmojis": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 336, in setEmojis\n    await ctx.message.add_reaction(e)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/message.py\", line 1220, in add_reaction\n    await self._state.http.add_reaction(self.channel.id, self.id, emoji)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "setEmojis": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 336, in setEmojis\n    await ctx.message.add_reaction(e)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/message.py\", line 1220, in add_reaction\n    await self._state.http.add_reaction(self.channel.id, self.id, emoji)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "setEmojis": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 336, in setEmojis\n    await ctx.message.add_reaction(e)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/message.py\", line 1220, in add_reaction\n    await self._state.http.add_reaction(self.channel.id, self.id, emoji)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "setEmojis": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 336, in setEmojis\n    await ctx.message.add_reaction(e)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/message.py\", line 1220, in add_reaction\n    await self._state.http.add_reaction(self.channel.id, self.id, emoji)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "setEmojis": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 336, in setEmojis\n    await ctx.message.add_reaction(e)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/message.py\", line 1220, in add_reaction\n    await self._state.http.add_reaction(self.channel.id, self.id, emoji)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "setEmojis": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 336, in setEmojis\n    await ctx.message.add_reaction(e)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/message.py\", line 1220, in add_reaction\n    await self._state.http.add_reaction(self.channel.id, self.id, emoji)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.MissingRequiredArgument'>": {
            "setEmojis": [
                "('rejected is a required argument that is missing.',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 855, in invoke\n    await self.prepare(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 789, in prepare\n    await self._parse_arguments(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 697, in _parse_arguments\n    transformed = await self.transform(ctx, param)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 542, in transform\n    raise MissingRequiredArgument(param)\n",
                    "discord.ext.commands.errors.MissingRequiredArgument: rejected is a required argument that is missing.\n"
                ]
            ]
        }
    },
    {
        "<class 'discord.ext.commands.errors.CommandInvokeError'>": {
            "setEmojis": [
                "('Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji',)",
                [
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 85, in wrapped\n    ret = await coro(*args, **kwargs)\n",
                    "  File \"/home/ishu/GitHub/Hermione/cogs/mods/mods.py\", line 336, in setEmojis\n    await ctx.message.add_reaction(e)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/message.py\", line 1220, in add_reaction\n    await self._state.http.add_reaction(self.channel.id, self.id, emoji)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/http.py\", line 254, in request\n    raise HTTPException(r, data)\n",
                    "discord.errors.HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n",
                    "\nThe above exception was the direct cause of the following exception:\n\n",
                    "Traceback (most recent call last):\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/bot.py\", line 939, in invoke\n    await ctx.command.invoke(ctx)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 863, in invoke\n    await injected(*ctx.args, **ctx.kwargs)\n",
                    "  File \"/usr/lib/python3.9/site-packages/discord/ext/commands/core.py\", line 94, in wrapped\n    raise CommandInvokeError(exc) from exc\n",
                    "discord.ext.commands.errors.CommandInvokeError: Command raised an exception: HTTPException: 400 Bad Request (error code: 10014): Unknown Emoji\n"
                ]
            ]
        }
    }
]